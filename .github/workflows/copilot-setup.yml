name: Copilot Environment Setup

on:
  workflow_dispatch:
    inputs:
      rails_env:
        description: 'Rails environment to setup'
        required: false
        default: 'development'
        type: choice
        options:
          - development
          - test
  workflow_call:

permissions:
  contents: read

env:
  RUBY_VERSION: "3.3.0"
  POSTGRES_USER: postgres
  POSTGRES_DB_PREFIX: read_ritual

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD || 'postgres' }}
          POSTGRES_DB: ${{ env.POSTGRES_DB_PREFIX }}_${{ github.event.inputs.rails_env || 'development' }}
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
            build-essential \
            git \
            libpq-dev \
            libyaml-dev \
            pkg-config \
            postgresql-client
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      
      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U ${{ env.POSTGRES_USER }}; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
      
      - name: Setup environment variables
        run: |
          RAILS_ENV=${{ github.event.inputs.rails_env || 'development' }}
          DB_NAME="${{ env.POSTGRES_DB_PREFIX }}_${RAILS_ENV}"
          DATABASE_URL="postgres://${{ env.POSTGRES_USER }}:***@localhost:5432/${DB_NAME}"
          
          echo "RAILS_ENV=${RAILS_ENV}" >> $GITHUB_ENV
          echo "DATABASE_URL=postgres://${{ env.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD || 'postgres' }}@localhost:5432/${DB_NAME}" >> $GITHUB_ENV
          echo "DB_NAME=${DB_NAME}" >> $GITHUB_ENV
          
          echo "Environment configured:"
          echo "- RAILS_ENV: ${RAILS_ENV}"
          echo "- Database: ${DB_NAME}"
          echo "- Ruby version: ${{ env.RUBY_VERSION }}"
      
      - name: Test database connection
        run: |
          psql "$DATABASE_URL" -c "SELECT version();"
      
      - name: Setup Rails application
        run: |
          bundle exec rails db:prepare
        env:
          RAILS_ENV: ${{ github.event.inputs.rails_env || 'development' }}
          DATABASE_URL: postgres://${{ env.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD || 'postgres' }}@localhost:5432/${{ env.POSTGRES_DB_PREFIX }}_${{ github.event.inputs.rails_env || 'development' }}
      
      - name: Verify environment setup
        run: |
          echo "âœ… Environment setup complete!"
          echo "ðŸ“Š Environment details:"
          echo "  - Ruby: $(ruby --version)"
          echo "  - Rails: $(bundle exec rails --version)"
          echo "  - PostgreSQL: $(psql --version)"
          echo "  - Database: $DB_NAME"
          echo "  - Rails Environment: $RAILS_ENV"
          
          # Test Rails console can start
          echo "ðŸ§ª Testing Rails environment..."
          timeout 10s bundle exec rails runner "puts 'Rails environment working: ' + Rails.env" || echo "Rails test completed"
      
      - name: Export environment for Copilot
        run: |
          echo "## ðŸ¤– Environment Ready for GitHub Copilot" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The ReadRitual development environment has been set up successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“‹ Environment Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Ruby Version**: ${{ env.RUBY_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Rails Environment**: ${{ github.event.inputs.rails_env || 'development' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Database**: PostgreSQL 15" >> $GITHUB_STEP_SUMMARY
          echo "- **Database Name**: $DB_NAME" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ”§ Available Commands" >> $GITHUB_STEP_SUMMARY
          echo "- \`bundle exec rails console\` - Start Rails console" >> $GITHUB_STEP_SUMMARY
          echo "- \`bundle exec rails server\` - Start Rails server" >> $GITHUB_STEP_SUMMARY
          echo "- \`bundle exec rails test\` - Run test suite" >> $GITHUB_STEP_SUMMARY
          echo "- \`bundle exec rails db:migrate\` - Run database migrations" >> $GITHUB_STEP_SUMMARY