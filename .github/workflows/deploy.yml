name: Deploy

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  deploy:
    name: Deploy with Kamal
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Ruby environment
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3 # Adjust to your Ruby version
          bundler-cache: true

      # Install Kamal
      - name: Install Kamal
        run: gem install kamal

      # Log in to Docker registry
      - name: Log in to Docker Registry
        env:
          KAMAL_REGISTRY_PASSWORD: ${{ secrets.KAMAL_REGISTRY_PASSWORD }}
        run: |
          echo "${{ secrets.KAMAL_REGISTRY_PASSWORD }}" | docker login -u ericroos13 --password-stdin

      # Write Rails master key to config/master.key
      - name: Write Rails Master Key
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          mkdir -p config
          echo "${RAILS_MASTER_KEY}" > config/master.key

      # Set up SSH key
      - name: Set up SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host *" > ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

      # Install Sentry CLI
      - name: Install Sentry CLI
        run: |
          curl -sL https://sentry.io/get-cli/ | bash
          sentry-cli login --auth-token ${{ secrets.SENTRY_AUTH_TOKEN }}

      # Deploy the application
      - name: Deploy Application
        env:
          KAMAL_REGISTRY_PASSWORD: ${{ secrets.KAMAL_REGISTRY_PASSWORD }}
          READ_RITUAL_DB_URL: ${{ secrets.READ_RITUAL_DB_URL }}
          READ_RITUAL_SENTRY_DSN: ${{ secrets.READ_RITUAL_SENTRY_DSN }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          SSH_OPTIONS: "-o PreferredAuthentications=publickey -4"
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          ./script/release
